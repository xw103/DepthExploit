package org.exploit.depth.activity;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Log;

public class AppActivity extends Activity {

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        String mainName = getMetaDataStringApplication("main", DefaultActivity.class.getName());
        Class<?> mainClz = DefaultActivity.class;
        Intent intent = new Intent(this, mainClz);
        try {
            Class clz = Class.forName(mainName);
            if(!clz.getSuperclass().getName().equals(DepthActivity.class.getName())){
                intent.putExtra("Error", "入口类未继承DepthActivity");
            }else {
                intent = new Intent(this, clz);
            }
        } catch (ClassNotFoundException e) {
            Log.e("Activity", Log.getStackTraceString(e));
            intent.putExtra("Error", e.getMessage());
        }
        startActivity(intent);
        finish();
    }

    public void startActivity(Intent intent) {
        Intent i = new Intent(this, ProxyActivity.class);
        Bundle bundle = intent.getExtras();
        if (bundle != null) {
            i.putExtras(bundle);
        }
        i.putExtra("class", intent.getComponent().getClassName());
        super.startActivity(i);
    }

    private String getMetaDataStringApplication(String key, String defValue) {
        Bundle bundle = getAppMetaDataBundle(getPackageManager(), getPackageName());
        if (bundle != null && bundle.containsKey(key)) {
            return bundle.getString(key);
        }
        return defValue;
    }

    private Bundle getAppMetaDataBundle(PackageManager packageManager,
                                        String packageName) {
        Bundle bundle = null;
        try {
            ApplicationInfo ai = packageManager.getApplicationInfo(packageName,
                    PackageManager.GET_META_DATA);
            bundle = ai.metaData;
        } catch (PackageManager.NameNotFoundException e) {
            Log.e("getMetaDataBundle", e.getMessage(), e);
        }
        return bundle;
    }
}
